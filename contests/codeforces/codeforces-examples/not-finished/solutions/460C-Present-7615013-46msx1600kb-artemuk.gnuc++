#include <iostream>
#include <fstream>
#include <sstream>
#include <vector>
#include <algorithm>
#include <string>
#include <cmath>
#include <set>
#include <queue>
#include <map>
#include <climits>
#include <cstdio>
#include <queue>
#include <stack>
#include <bitset>
#include <list> 
#include <iomanip>
#include <memory.h>
#include <ctime>

using namespace std;

typedef long long int ll;
typedef long double de;
typedef vector<int> vi;
typedef vector<ll> vl;
typedef vector<char> vc;
typedef vector<bool> vb;
typedef vector<string> vs;
typedef vector<vi> vvi;
typedef vector<vc> vvc;
typedef vector<vl> vvl;
typedef vector<vb> vvb;
typedef vector<vs> vvs;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
typedef vector<pii> vpii;
typedef vector<pll> vpll;
typedef vector<vpii> vvpii;
typedef vector<vpll> vvpll;

#define all(x) x.begin(),x.end()
#define maxlim(x) numeric_limits<x>::max()
#define matrix_out(x) for(int i = 0;i < x.size();i++) { for(int j = 0;j < x[i].size();j++) { cout << x[i][j] << ' ';} cout << endl;}

int main()
{
	ios_base::sync_with_stdio(false);
	ll n,m,w;
	cin >> n >> m >> w;
	vl v(n);
	for(ll i = 0;i < n;i++)
		cin >> v[i];
	ll l = 0,r = 1000100000;
	while(r>l)
	{
		ll mid = (r+l+1)/2,cnt = 0;
		vl f(n+1);
		for(ll j = 0;j < n;j++)
		{
			ll d = mid - v[j] - f[j];
			if(d > 0)
			{
				f[j] += d;
				cnt += d;
				f[min(n,j+w)] -= d;
			}
			f[j+1] += f[j];
		}
		if(cnt > m)
			r = mid-1;
		else l = mid;
	}
	cout << l << endl;
	return 0;
}